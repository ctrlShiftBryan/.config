{
  // Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and 
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
  // same ids are connected.
  // Example:
  "format-console": {
    "prefix": "fconsole",
    "body": [
      "const s = JSON.stringify($1, null, 2);",
      "console.log('--------------', s, '--------------------');"
    ],
    "description": "Log output to console"
  },
  "remix-form": {
    "prefix": "rxf-form",
    "body": [
      "<form method='post'>",
      "  <input type='hidden' name='id' value={data} />",
      "  <button type='submit'>action</button>",
      "</form>",
    ],
    "description": "Remix Action"
  },
  "remix-action": {
    "prefix": "rxa-action",
    "body": [
      "export const action: ActionFunction = async ({ request }) => {",
      "  const formData = await request.formData();",
      "  const id = formData.get('id');",
      "  console.log({ id });",
      "  return json<LoaderData>(await getData(Number(id)));",
      "};"
    ],
    "description": "Remix Action"
  },
  "remix-load-2": {
    "prefix": "rxi-loader",
    "body": [
      "import type { LoaderFunction } from '@remix-run/node';",
      "import { json } from '@remix-run/node';",
      "import { useLoaderData } from '@remix-run/react';",
      "import invariant from 'tiny-invariant';",
      "",
      "async function getData(id: number) {",
      "  return id;",
      "}",
      "",
      "type LoaderData = Awaited<ReturnType<typeof getData>>;",
      "",
      "export const loader: LoaderFunction = async ({ params: { id } }) => {",
      "  invariant(id, 'id is required');",
      "  return json<LoaderData>(await getData(Number(id)));",
      "};",
      "",
      "export default function ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}() {",
      "  const data = useLoaderData() as LoaderData;",
      "  return <div>{data}</div>;",
      "}",
    ],
    "description": "Remix Id Loader"
  },
  "remix-load": {
    "prefix": "rx-loader",
    "body": [
      "import type { LoaderFunction } from '@remix-run/node';",
      "import { json } from '@remix-run/node';",
      "import { useLoaderData } from '@remix-run/react';",
      "",
      "async function getData() {",
      "  return 'hello world';",
      "}",
      "",
      "type LoaderData = Awaited<ReturnType<typeof getData>>;",
      "",
      "export const loader: LoaderFunction = async () => {",
      "  return json<LoaderData>(await getData());",
      "};",
      "",
      "export default function ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}() {",
      "  const data = useLoaderData() as LoaderData;",
      "  return <div>{data}</div>;",
      "}",
    ],
    "description": "Remix Loader"
  },
  "Native React Functional Component": {
    "prefix": "nrfc",
    "body": [
      "import React from 'react';",
      "import { View, Text } from 'react-native';",
      "interface Props {",
      "}",
      "export default function ${TM_FILENAME_BASE:} (props: Props) {",
      "  return (",
      "    <View>",
      "      <Text>",
      "        ${0}",
      "      </Text>",
      "    </View>",
      "  );",
      "}",
    ],
    "description": "React Functional Component"
  },
  "React Functional Component": {
    "prefix": "rfc",
    "body": [
      "import React from 'react';",
      "export interface I${TM_FILENAME_BASE:default}Props {",
      "}",
      "export default function ${TM_FILENAME_BASE:} (props: I${TM_FILENAME_BASE:}Props) {",
      "  return (",
      "    <div>",
      "      ${0}",
      "    </div>",
      "  );",
      "}",
    ],
    "description": "React Functional Component"
  },
  "Export Default React Pure Function Component": {
    "prefix": "tsdrpfc",
    "body": [
      "import * as React from 'react';",
      "",
      "export interface I${1:App}Props {",
      "}",
      "",
      "export default function ${1:} (props: I${1:}Props) {",
      "  return (",
      "    <div>",
      "      ${0}",
      "    </div>",
      "  );",
      "}",
      ""
    ],
    "description": "Create a default-exported React Pure Function Component."
  },
  "Storybook": {
    "prefix": "story",
    "body": [
      "import { storiesOf } from '@storybook/react';",
      "import * as React from 'react';",
      "import '../../styles/tailwind.css';",
      "import  ${TM_FILENAME/^([^.]+).*/${1}/} from './${TM_FILENAME/^([^.]+).*/${1}/}';",
      "storiesOf('${TM_FILENAME/^([^.]+).*/${1}/}', module)",
      "  .add('Default', () => (",
      "    < ${TM_FILENAME/^([^.]+).*/${1}/} />",
      "  ));",
    ],
    "description": "Storybook"
  }
}
